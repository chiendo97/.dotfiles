# {{{ === General
# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Enable vi navigator for motion
setw -g mode-keys vi

# helps in faster key repetition
set-option -s escape-time 10

# don't rename windows automatically
set-option -g allow-rename off

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
set -g pane-base-index 1

# color 
set -g default-terminal "screen-256color" 
set -ga terminal-overrides ",xterm-256color:Tc"

# set global options for terminal
set -g renumber-windows on
set -g set-titles on
set -g set-titles-string "#{session_name}"
# }}}

# {{{ === Keys
# prefix key
unbind C-Space
set-option -g prefix C-Space
bind-key C-Space send-prefix

# source .tmux.conf file
unbind r
bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"
unbind C-r
bind C-r source-file ~/.tmux.conf \; display "Configuration Reloaded!"

# switch panes
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Ctrl - t or t new window
unbind t
unbind C-t
bind-key t new-window
bind-key C-t new-window

# Ctrl - w or w to kill panes
unbind w
unbind C-w
bind-key w kill-pane
bind-key C-w kill-pane

# C + control q to kill session
unbind q
unbind C-q
bind-key q confirm-before -p "kill-window #W? (y/n)" kill-session
bind-key C-q confirm-before -p "kill-window #W? (y/n)" kill-session

# C + d to detach session
unbind d
unbind C-d
bind-key d confirm-before -p "detach-session #W? (y/n)" detach-client
bind-key C-d confirm-before -p "detach-session #W? (y/n)" detach-client

# Ctrl + a + n : New session
#unbind n
#unbind C-n
#bind-key n new-session
#bind-key C-n new-session

# split panes using | and
bind = split-window -h
bind - split-window -v
unbind '"'
unbind %

# resize pane
bind-key -r H resize-pane -L
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -R

bind-key C-a setw synchronize-panes

# User p for paste just like vim
bind p paste-buffer

# Use v to trigger selection    
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# copy to clipboard
bind-key C-c run "tmux save-buffer - | pbcopy"
bind-key C-v run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

# }}}

# {{{ === Status bar configuration
setw -g window-status-style fg=yellow,bg=black,none
setw -g window-status-activity-style fg=green,bg=black,none
setw -g window-status-separator ''
setw -g window-status-format '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I  #W  #F #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'

set -g status 'on'

set -g status-style bg='colour235'

set -g status-justify 'centre'

set -g status-left-style 'none'
set -g status-left-length '100'
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] #(whoami)  #(uptime  | cut -d " " -f 1,2) #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'

set -g status-right-style 'none'
set -g status-right-length '100'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %r  %d-%m-%Y #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #H #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]'

set -g message-style fg=black,bg=white
set -g message-command-style fg=black,bg=cyan
# }}}
